on:
  push:
    tags:
      - "v*"

name: Release

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # setup nodejs
      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      # get current  tag
      - name: tag
        id: next_tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/tags/}

      - name: version
        id: next_version
        run: |
          tag=${{ steps.next_tag.outputs.tag }}
          echo ::set-output name=version::${tag:1}

      - name: Increment manifest version
        run: |
          jq '.version = "${{ steps.next_version.outputs.version }}"' ./public/manifest.json  > ./public/manifest.tmp.json
          mv ./public/manifest.tmp.json ./public/manifest.json

      - name: Increment package.json version
        run: |
          jq '.version = "${{ steps.next_version.outputs.version }}"' package.json  > package.tmp.json
          mv package.tmp.json package.json

      # Build extension
      - name: Install and build
        run: |
          yarn install
          yarn run build
          yarn run web-ext:build

      # Release to github
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./web-ext-artifacts/marina-${{ steps.next_version.outputs.version }}.zip
          asset_name: marina-${{ steps.next_version.outputs.version }}.zip
          asset_content_type: application/zip

      # Comit manifest and package.json to master
      - name: Commit & Push
        run: |
          git config --local user.email "$(git log --format='%ae' HEAD^!)"
          git config --local user.name "$(git log --format='%an' HEAD^!)"
          git add .
          git commit -m "${{ steps.next_tag.outputs.tag }}"
          git push origin HEAD:master
